{"version":3,"sources":["images/youtubeLogo.png","Components/SelectedVideo/StyledVideoPlayer.js","context/YoutubeDataContext.js","Components/SelectedVideo/videoList.js","Components/SelectedVideo/StyledVideoList.js","Components/SelectedVideo/selectedVideo.js","Components/Search/StyledSearch.js","Components/Search/search.js","App.js","serviceWorker.js","API/youtube.js","context/reducers/YoutubeReducer.js","context/YoutubeDataState.js","index.js"],"names":["module","exports","StyledVideoPlayer","styled","div","StyledIframe","iframe","VideoListContainer","props","from","VideoItemContainer","VariableShadowCard","Card","shadow","YoutubeDataContext","createContext","YoutubeDataProvider","Provider","Consumer","StyledVideoTitle","Typography","VideoList","youtubeData","useContext","data","videoListsData","history","useHistory","videoList","length","map","d","index","key","CardActionArea","onClick","video","videoSelected","push","CardMedia","image","imageDetails","url","title","style","height","CardContent","variant","color","component","channel","StyledVideoList","SelectedVideo","videoData","selectedVideo","useRef","useEffect","window","scrollTo","videoId","Object","keys","ref","src","frameBorder","allowFullScreen","StyledSearch","Input","SearchComponent","handleSubmit","event","preventDefault","context","searchVideo","state","value","handleChange","setState","target","onSubmit","this","action","icon","placeholder","onChange","Component","contextType","h1","StyledImage","img","ImageContainer","App","handleGoBack","getTrendingVideos","console","log","display","flexDirection","padding","youTubeImage","alt","exact","path","render","withRouter","Boolean","location","hostname","match","apiKey","process","getYoutubeData","searchText","a","axios","get","params","part","maxResults","q","fetchMostPopularVideos","chart","regionCode","videoCategoryId","popularVideoData","getSimilarVideos","type","relatedToVideoId","similarVideos","YoutubeReducer","YoutubeDataState","useReducer","dispatch","formattedTrendingVideoData","items","item","id","snippet","channelTitle","description","thumbnails","high","formattedVideoData","then","results","simiarVideos","children","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.43862b0d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/youtubeLogo.adcaaacb.png\";","import styled from 'styled-components';\r\nimport {Card} from '@material-ui/core';\r\nexport const StyledVideoPlayer=styled.div`\r\npadding-bottom: 56.25%;\r\nmargin-left: 4%;\r\nheight:0;\r\nposition: relative;\r\n@media (max-width:768px){\r\n    padding-bottom: 56.25%;        \r\n    height:0;\r\n    margin-left: 0%;\r\n    position: relative;\r\n}\r\n`;\r\n\r\nexport const StyledIframe=styled.iframe`\r\nposition: absolute;\r\ntop:0;\r\nleft:0;\r\nwidth:68% !important;\r\nheight:65% !important;\r\n@media (max-width:768px){\r\n    position: absolute;\r\n    top:0;\r\n    left:0;\r\n    width:100% !important;\r\n    height:100% !important;\r\n}\r\n`;\r\n\r\nexport const VideoListContainer=styled.div`\r\ndisplay:flex;\r\npadding-left:${props=>props.from === 'search' ? '0%' : '10%'};\r\nflex-direction:${props=>props.from === 'search' ? 'column' : 'row'};\r\nflex-wrap:wrap;\r\njustify-content:space-around;\r\n@media(max-width:768px){\r\n    padding-left:0%\r\n}\r\n`;\r\nexport const VideoItemContainer=styled.div`\r\nwidth:20%;\r\nmargin:1%;\r\n@media(max-width:768px){\r\n    width:100%;\r\n    padding-left: 0%;\r\n}\r\n`;\r\n\r\nexport const VariableShadowCard=styled(Card)\r\n`box-shadow:${props=>props.shadow === 'search' ? 'inset !important' : 'none !important'};\r\n@media(max-width:768px){\r\n    box-shadow:inset !important\r\n}\r\n`;","import {createContext} from 'react';\r\n\r\nexport const YoutubeDataContext=createContext();\r\n\r\nexport const YoutubeDataProvider = YoutubeDataContext.Provider;\r\nexport const YoutubeDataConsumer = YoutubeDataContext.Consumer;\r\n","import React,{useContext} from 'react';\r\nimport {Card,CardActionArea,CardMedia,CardContent,Typography,Divider} from '@material-ui/core';\r\nimport {VideoListContainer,VideoItemContainer,VariableShadowCard} from './StyledVideoPlayer';\r\n// import {selectedVideo} from './../../store/actions/AllAction';\r\n// import {connect} from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport {YoutubeDataContext} from '../../context/YoutubeDataContext';\r\nconst StyledVideoTitle=styled(Typography)`\r\nline-height:2rem;\r\nfont-size:1rem !important;\r\nfont-weight:bold !important\r\n`;\r\n\r\nconst VideoList=(props)=>{\r\n    //console.log(props.data);    \r\n    const youtubeData=useContext(YoutubeDataContext);\r\n    const data = youtubeData.videoListsData;\r\n    const history=useHistory();\r\n    function handleClick(video){      \r\n      youtubeData.videoSelected(video);\r\n      history.push('/YouTube-hooks/select')\r\n    }\r\n    const videoList=data.length ? <VideoListContainer>\r\n    {data.map((d,index)=>{\r\n        return <VideoItemContainer>\r\n          <VariableShadowCard key={index}>\r\n        <CardActionArea onClick={()=>handleClick(d)}>\r\n          <CardMedia           \r\n            image={d.imageDetails.url}\r\n            title={d.title}\r\n            style={{height:'25vh'}}\r\n          />\r\n          <CardContent>\r\n            <StyledVideoTitle variant=\"body1\">\r\n             {d.title}\r\n            </StyledVideoTitle>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {d.channel}\r\n            </Typography>               \r\n          </CardContent>\r\n        </CardActionArea>\r\n        </VariableShadowCard>          \r\n        </VideoItemContainer>\r\n    })}        \r\n    </VideoListContainer>:null;    \r\n    return(data.length && videoList )         \r\n}\r\nexport default VideoList;\r\n","import React from 'react';\r\nimport VideoList from './videoList';\r\nimport styled from 'styled-components';\r\nconst StyledVideoList=styled(VideoList)`\r\ndisplay:flex;\r\nflex-direction:column !important;\r\n`\r\n\r\nexport default StyledVideoList;\r\n","import React ,{useRef,useEffect,useContext} from 'react';\r\n//import styles from './youtube.module.css';\r\nimport {StyledVideoPlayer,StyledIframe} from './StyledVideoPlayer';\r\nimport SimilarVideoList from './StyledVideoList';\r\nimport {connect} from 'react-redux';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {YoutubeDataContext} from '../../context/YoutubeDataContext';\r\nconst scrollToRef=(ref)=>window.scrollTo(0,0)\r\nconst SelectedVideo=(props)=>{\r\n    // const location = useLocation();\r\n    // console.log(location.state.video);\r\n    //console.log(props);\r\n    const youtubeData=useContext(YoutubeDataContext);    \r\n    const videoData = youtubeData.selectedVideo;\r\n    const video=useRef(null);\r\n    useEffect(() => {        \r\n        scrollToRef(video);\r\n    });\r\n    //console.log(props.data);\r\n    const url=videoData ? \r\n    `https://www.youtube.com/embed/${videoData.videoId}?rel=0&hd=1&autoplay=1`: \"\";\r\n    const selectedVideo=Object.keys(videoData).length ?  <div>\r\n            <StyledVideoPlayer ref={video}>         \r\n        <StyledIframe src={url} title={videoData.title} \r\n        frameBorder=\"0\" allowFullScreen></StyledIframe>                  \r\n        </StyledVideoPlayer>      \r\n        </div> : null;\r\n    return (selectedVideo)\r\n}\r\n\r\nexport default SelectedVideo;\r\n","import styled from 'styled-components';\r\nimport { Input } from 'semantic-ui-react';\r\nexport const StyledSearch=styled(Input)`\r\nmargin-top: 2%;\r\npadding: 0% 0% 2% 0%;\r\nwidth:200%;\r\n@media (max-width:768px){\r\n    margin-top: 2%;  \r\n    padding-left: 5%;      \r\n    width:90%\r\n}\r\n`;","import React, { Component } from 'react';\r\nimport {StyledSearch} from './StyledSearch';\r\nimport {YoutubeDataContext} from '../../context/YoutubeDataContext';\r\n// import {connect} from 'react-redux';\r\n// import {searchVideo} from './../../store/actions/AllAction';\r\nclass SearchComponent extends Component { \r\n    static contextType = YoutubeDataContext;  \r\n    constructor(props) {\r\n        super(props)    \r\n        this.state = {\r\n             value:''\r\n        }\r\n    }\r\n    handleSubmit=(event)=>{\r\n        event.preventDefault();\r\n        this.context.searchVideo(this.state.value);\r\n        //this.props.onSearch(this.state.value);        \r\n    }\r\n    handleChange=(event)=>{\r\n        this.setState({\r\n            value:event.target.value\r\n        })\r\n     }\r\n    render() {\r\n        return (  \r\n            <form onSubmit={this.handleSubmit}>\r\n                 <StyledSearch action={{ icon: 'search' }} placeholder='Search' \r\n                 value={this.state.value}\r\n                onChange={this.handleChange}/>  \r\n            </form>                                                                                  \r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchComponent;\r\n","import React, {Component,Fragment} from 'react';\nimport SelectedVideo from './Components/SelectedVideo/selectedVideo';\nimport VideoList from './Components/SelectedVideo/videoList';\nimport StyledVideoList from './Components/SelectedVideo/StyledVideoList';\nimport SearchComponent from './Components/Search/search';\n// import {getTrendingVideos} from './store/actions/AllAction';\n// import {connect} from 'react-redux';\nimport { Header, Icon } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport {withRouter,Route,Switch} from 'react-router-dom';\nimport {YoutubeDataContext} from './context/YoutubeDataContext';\nimport youTubeImage from './images/youtubeLogo.png';\n//const YoutubeDataContext = React.createContext();\nconst HeaderContainer=styled.div`\npadding:2% 2% 0% 8%\n`;\nconst StyledHeader=styled.h1`\npadding:0% 16% 0% 4% !important;\n`;\nconst StyledImage = styled.img`\nwidth: 36%;\nheight: auto;\n:hover{\n  cursor: pointer;\n}\n@media (max-width:768px){\n  width:96%\n}\n`;\nconst ImageContainer = styled.div`\nwidth:30%;\n@media (max-width:768px){\n  width:auto\n}\n`;\nclass App extends Component{  \n  static contextType = YoutubeDataContext;\n  history  = this.props.history;\n  constructor(props) {\n    super(props);        \n  }   \n  async componentDidMount(){\n    //this.props.getTrendingVideos();\n    console.log(this.context);\n    this.context.getTrendingVideos();\n  }\nhandleGoBack=(event)=>{ \n  //alert(\"Shut the fuck up!\");\n  this.context.getTrendingVideos();\n  this.history.push('/YouTube-hooks/');  \n}\n  render(){\n    return <div>  \n  <div style={{display:'flex',flexDirection:'row',padding:'2%'}}>\n  {/* <StyledHeader>Logo comes here</StyledHeader> */}\n  <ImageContainer>\n  <StyledImage src={youTubeImage} alt=\"Youtube logo\" onClick={this.handleGoBack}/>\n  </ImageContainer>  \n  <SearchComponent/>  \n    </div>     \n  {/* <BrowserRouter> */}\n  <Switch>\n  <Route exact path=\"/YouTube-hooks/\" render={props=><VideoList/>}/>\n  <Route exact path=\"/YouTube-hooks/select\" render={props=><Fragment><SelectedVideo/><StyledVideoList/></Fragment>}/>\n  </Switch>  \n  {/* </BrowserRouter>     */}\n    </div>\n  }\n}\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from 'axios';\r\nconst url=\"https://www.googleapis.com/youtube/v3/search\";\r\nconst apiKey=process.env.REACT_APP_YOUTUBE_API_KEY;\r\n \r\n// https://developers.google.com/apis-explorer/#p/youtube/v3/youtube.search.list?\r\n//         part=snippet\r\n//         &chart=mostPopular\r\n//         &regionCode=es\r\n//         &videoCategoryId=17\r\n export const getYoutubeData=async(searchText)=>{\r\n     try\r\n     {        \r\n        const data= await axios.get(url,{\r\n            params:{\r\n                part:'snippet',\r\n                maxResults:12,\r\n                key:apiKey,\r\n                q:searchText\r\n            }\r\n         });\r\n         return data.data;\r\n     } \r\n     catch(error){\r\n         console.log(error);\r\n     }    \r\n }\r\n export const fetchMostPopularVideos=async()=>{\r\n     try{\r\n        console.log(apiKey);\r\n        const popularVideoData=await axios.get('https://www.googleapis.com/youtube/v3/videos',{\r\n            params:{\r\n                part:'snippet',\r\n                chart:'mostPopular',\r\n                regionCode:'IN',\r\n                videoCategoryId:17,\r\n                maxResults:12,\r\n                key:apiKey\r\n            }            \r\n        });\r\n        console.log(popularVideoData.data);\r\n        return popularVideoData.data;\r\n     }\r\n     catch(error){\r\n\r\n     }\r\n }\r\n//  https://developers.google.com/apis-explorer/#p/youtube/v3/youtube.search.list?\r\n//         part=snippet\r\n//         &type=video\r\n//         &relatedToVideoId=wtLJPvx7-ys\r\n export const getSimilarVideos=async(videoId)=>{\r\n     try{\r\n        const similarVideos=await axios.get('https://www.googleapis.com/youtube/v3/search',{\r\n        params:{\r\n            part:'snippet',\r\n            maxResults:12,\r\n            type:'video',\r\n            regionCode:'IN',\r\n            relatedToVideoId:videoId,\r\n            key:apiKey\r\n        }\r\n    });\r\n    console.log(similarVideos.data);\r\n    return similarVideos.data\r\n     }  \r\n     catch(error)\r\n     {\r\n         console.log(error)\r\n     }  \r\n }","// const initialState={\r\n//     videoListsData:[],\r\n//     selectedVideo:{}\r\n// };\r\nexport const YoutubeReducer=(state,action)=>{\r\n    switch(action.type){\r\n        case 'RETRIEVE_POPULAR_VIDEOS':                 \r\n         return {...state,\r\n        videoListsData:action.data};                \r\n        case 'SELECT_VIDEO':\r\n         return {...state,\r\n        selectedVideo:action.data};\r\n        case 'GET_SIMILARVIDEOS':\r\n         return {...state,\r\n        videoListsData:action.data\r\n        }   \r\n        case 'SEARCH_VIDEO':\r\n            return{\r\n                ...state,\r\n            videoListsData:action.data,\r\n            selectedVideo:{}\r\n            }   \r\n    }\r\n    return state;\r\n}","import React,{useReducer} from 'react';\r\nimport {fetchMostPopularVideos,getSimilarVideos,getYoutubeData} from '../API/youtube';\r\nimport {RETRIEVE_POPULAR_VIDEOS,SELECT_VIDEO,GET_SIMILARVIDEOS,SEARCH_VIDEO} from './actionTypes/ActionTypes';\r\nimport {YoutubeDataProvider} from './YoutubeDataContext';\r\nimport {YoutubeReducer} from './reducers/YoutubeReducer';\r\n\r\nconst YoutubeDataState = (props) => {\r\n    const initialState={\r\n        videoListsData:[],\r\n        selectedVideo:{}\r\n    };\r\n    const[state,dispatch] = useReducer(YoutubeReducer,initialState);\r\n    const getTrendingVideos=()=>{\r\n            fetchMostPopularVideos().then((data)=>{\r\n                const results= formattedTrendingVideoData(data);\r\n                dispatch({\r\n                    type:'RETRIEVE_POPULAR_VIDEOS',\r\n                    data:results\r\n                })\r\n            });           \r\n    }\r\n    const formattedTrendingVideoData=(data)=>{\r\n        console.log(data);\r\n        var similarVideos=[];\r\n        similarVideos=data.items.map((item)=>{\r\n            return{\r\n              videoId:item.id,\r\n              channel:item.snippet.channelTitle,\r\n              description:item.snippet.description,\r\n              title:item.snippet.title,\r\n              imageDetails:item.snippet.thumbnails.high\r\n            }\r\n          });\r\n          return similarVideos \r\n      }\r\n      const videoSelected=(video)=>{       \r\n            getSimilarVideos(video.videoId).then((data)=>{\r\n                const simiarVideos=formattedVideoData(data);\r\n                dispatch({\r\n                    type:'GET_SIMILARVIDEOS',\r\n                    data:simiarVideos\r\n                })\r\n            })\r\n            dispatch({\r\n                type:'SELECT_VIDEO',\r\n                data:video\r\n            })\r\n    }\r\n    const formattedVideoData=(data)=>{\r\n        var similarVideos=[];\r\n        similarVideos=data.items.map((item)=>{\r\n            return{\r\n              videoId:item.id.videoId,\r\n              channel:item.snippet.channelTitle,\r\n              description:item.snippet.description,\r\n              title:item.snippet.title,\r\n              imageDetails:item.snippet.thumbnails.high\r\n            }\r\n          });\r\n          return similarVideos\r\n    }\r\n    const searchVideo=(searchText)=>{      \r\n          getYoutubeData(searchText).then((data)=>{\r\n             const results= formattedVideoData(data);\r\n             dispatch({\r\n              type:'SEARCH_VIDEO',\r\n              data:results\r\n          })\r\n          });        \r\n        }\r\n    return(<YoutubeDataProvider value={{\r\n        videoListsData:state.videoListsData,\r\n        selectedVideo:state.selectedVideo,\r\n        getTrendingVideos,\r\n        searchVideo,\r\n        videoSelected}}>\r\n        {props.children}\r\n    </YoutubeDataProvider>)\r\n}\r\nexport default YoutubeDataState;\r\n\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\nimport YoutubeDataState from './context/YoutubeDataState';\nimport {BrowserRouter} from 'react-router-dom';\n//const store=createStore(VideosReducer,applyMiddleware(thunk));\n\nReactDOM.render(  \n  <YoutubeDataState>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n    </YoutubeDataState>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}